// Code generated by MockGen. DO NOT EDIT.
// Source: helper/version_details_provider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "elasticsearch-version-control/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVersionDetailsProvider is a mock of VersionDetailsProvider interface
type MockVersionDetailsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockVersionDetailsProviderMockRecorder
}

// MockVersionDetailsProviderMockRecorder is the mock recorder for MockVersionDetailsProvider
type MockVersionDetailsProviderMockRecorder struct {
	mock *MockVersionDetailsProvider
}

// NewMockVersionDetailsProvider creates a new mock instance
func NewMockVersionDetailsProvider(ctrl *gomock.Controller) *MockVersionDetailsProvider {
	mock := &MockVersionDetailsProvider{ctrl: ctrl}
	mock.recorder = &MockVersionDetailsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersionDetailsProvider) EXPECT() *MockVersionDetailsProviderMockRecorder {
	return m.recorder
}

// GetNextIndexVersions mocks base method
func (m *MockVersionDetailsProvider) GetNextIndexVersions(alias string, currentVersion int) ([]model.IndexDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextIndexVersions", alias, currentVersion)
	ret0, _ := ret[0].([]model.IndexDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextIndexVersions indicates an expected call of GetNextIndexVersions
func (mr *MockVersionDetailsProviderMockRecorder) GetNextIndexVersions(alias, currentVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextIndexVersions", reflect.TypeOf((*MockVersionDetailsProvider)(nil).GetNextIndexVersions), alias, currentVersion)
}
