// Code generated by MockGen. DO NOT EDIT.
// Source: helper/version_helper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "elasticsearch-version-control/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVersionHelper is a mock of VersionHelper interface
type MockVersionHelper struct {
	ctrl     *gomock.Controller
	recorder *MockVersionHelperMockRecorder
}

// MockVersionHelperMockRecorder is the mock recorder for MockVersionHelper
type MockVersionHelperMockRecorder struct {
	mock *MockVersionHelper
}

// NewMockVersionHelper creates a new mock instance
func NewMockVersionHelper(ctrl *gomock.Controller) *MockVersionHelper {
	mock := &MockVersionHelper{ctrl: ctrl}
	mock.recorder = &MockVersionHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersionHelper) EXPECT() *MockVersionHelperMockRecorder {
	return m.recorder
}

// GetNextIndexVersions mocks base method
func (m *MockVersionHelper) GetNextIndexVersions(alias string, currentVersion int) ([]model.IndexDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextIndexVersions", alias, currentVersion)
	ret0, _ := ret[0].([]model.IndexDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextIndexVersions indicates an expected call of GetNextIndexVersions
func (mr *MockVersionHelperMockRecorder) GetNextIndexVersions(alias, currentVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextIndexVersions", reflect.TypeOf((*MockVersionHelper)(nil).GetNextIndexVersions), alias, currentVersion)
}
